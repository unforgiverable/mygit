1、什么是git?
git是一款源代码管理工具（版本管理工具）
我们代码需要使用git进行管理。因为人工区处理不同的版本，做相应的备份会很麻烦。
git是linux之父为了维护linux写的一个版本管理工具，方便备份修改。
2、git安装
全部点击下一步
安装成功的标志：右键显示{git gui here
                        git bash here}
 3、流行框架--初始化git仓库
 使用git 新建一个文件夹（myproject）-->做项目代码开发
  右键-》get bash here
  git init   (init初始化）
  在项目目录右键打开git bash here
  （文件隐藏时： 查看--》显示隐藏）
  （说明：这个仓库会存放git对我们项目代码进行备份修改的文件）
                        
命令：git init

4、流行框架--配置使用者的用户名和邮件

把myproject放在sublime text中
新建文件readme,md(开发的代码）
    |
    敲代码备份
    右键get bash here(看目录是否拾一致）
   
   （1）用户
   git config --global user.name "xiaoming"   (config 配置 global 表示全局
   （2）邮箱
   git config --global user.email"xiaoming@sina.com"
   每一次备份都会把当前备份者的信息进行存储。
5、流行框架--吧代码存储到git仓库中
 git add ./read.md
 git commit -m "我们完成了第一个功能”      //-m信息说明，commit提交
 
 步骤：
 把大象放到冰箱需要几步？
 （1）开门
  （2）放
  （3）关门
  
  把代码存储到git中
  （1）把代码放在git门口
       git add ./readme.md 
   (2）把仓库门口的代码放到里面的房间去
      git commit -m "这是对这次添加的
  6、流行框架--把代码提交到仓库中
  git add ./readme.md
  git commit -m
  【不写-m的话
  出现另外的界面
  按下i键
  按下esc
  输入:q 回车
   esc
   :q!
   终止提交，退出来了
   重新执行 git commit -m "这一次，我们加了一个功能】

7、流行框架--命令命令查看状态
  git add ./read.me
  git status    (modified:readme.md)修改后的
  git commit -m "这一次，我们完成看第三个功能“
  git status
  git add ./readme.md
  git status
  git commit -m "这是我们修改后的第四个功能    //总会修改到你喜欢的，干就完事了
  命令：git status  查看当前代码有没有被放到仓库中去
8、流行框架--git add和git commit补充
  git status
   git add ./
   git status
   git commit -m "添加了01.js和一个新功能“
     修改
     git status
     git commit --all 表示把修改过的代码一次性放到仓库中
     
     命令：git add ./把所有的修改过的文件放到大门口
         git commit --all -m  表示把所有的修改的文件提交到仓库中
         
9、流行框架--git查看日志
（1）gitigonre,在这个文件中可以设置被忽略的文件或目录
 （2）被忽略的文件不会被提交到仓库中
 （3）在.gitignore中可以书写要备忽略的文件的路径，以/开头。一行写一个路径，这些路径对应的文件都会被忽略，不会被提交到仓库中。
 写法
 /.idea 会忽略.idea文件
 /js 会忽略js目录里的所有文件
 /js/*.js 会忽略js目录下的所有文件
 
 {clear   清除
 git log   查看历史提交的数据
 git commit -m  第二个功能
 git log 
 git log --oneline   //查看简介版本的日志
 }
10、流行框架，git版本回退‘
   git reset --hard Head ~0
   git add ./
   git commit -m"加了一句会话”
   git log --oneline
   git log--oneline
   回退到指定的版本
            //hard 把代码那过来，Head~0往前退
                                    ~1往上上一次退
                                   
 11、流行框架-git通过阪本号切换版本
   git branch dev 创建一个dev分支
   git branch 查分支
   git checkout dev 切换 
   git status 查看
   git add ./
   git commit -m "这是在dev提交的功能"
   git checkout master 切换回去
   git log ---oneline 查看日志
   git merge dev 合并
   git reflog 可以看到每一次切换的版本的记录，可以看到所有提交的版本号
   
   分支
   默认是有一个主分支 master
   创建分支 git branch dev
   在刚创建时dev分支里的东西和master里的东西是一样的
   
   切换分支
   git checkout dev
   切换到指定的分支，这里切换到名为dev的分支
   git branch 可看所有的分支
   
   
   git merge dev
   合并分支内容，把当前分支跟指定的dev分支进行合并g
   当前分支指的是git branch命令输出的前面有*号的分支        //clear清零
   
   13、合并分支时，手动处理
    git branch -d     //删除dev              //conflct冲突
    git checkout master 切换到master
    如果合并有冲突时，需要手动去处理，处理后还需要再次提交
    
    14、git push命令，把本地代码提交
    github只是一个网站，只不过这个网站提供了允许别人通过git上传代码的功能
    提交代码到github（当作git服务器来用）
    
    git push 地址（刚复制的饿地址，github库地址）       //点击https生成一个链接，赋值它的地址
    git push 地址 master
   会把当前的分支的内容上传到远程的master分支上
   
   15、git pull&git done 得到
      git add ./
      git commit -m "添加了index.html文件"
      
      整个团队的开发
      
      
      小明  -------------->  小红
       git pull 地址分支                             服务器  /希望代码可以随时上传到服务器，别人要用时可以下载
       
       16、新建文件index.html
       添加文件 git add ./
       提交 git commit -m “添加index.html文件”
       git push 地址  把当前分支提交到远程master分支
       
       git pull 地址 master
        会把远程分支的数据得到，注意本地要初始化一个仓储
         新建test clone
         git clone 地址  克隆
         会得到远程仓储相同的数据，如果多次执行会覆盖本地内容
         
     17、通过ssh方式上传代码
       ssh方式上传代码
       公钥匙  私钥匙   两者这件有关联
       打开git （生成密钥）
       ssh-keygen -t rsa -C "xiaoming@sina.com"
       (查用户名 ctrl+r cmd)
       id_rsa.pub 公钥  右键用sublime打开，复制
       setting --->ssh  new ssh key 粘贴
       git push 地址/test119.git master
       
       18、模拟两个用户push&pull
       
           用户A小明  --------上传到服务器-------->  服务器  -------从服务器拿 pull---------------> 小红
       修改后先再本地提交                                                                 小红想要把最新地数据拿过来，在本地提交之前，
       然后再push到-服务器                                                                 先pull再push。注意先pull地话，如果服务器版本和本地版本不同。
                                                                                          我们可以把冲突先解决，然后把最新地版本上传（push）到服务器
        新建目录 xh
        初始化 git init
        git pull 地址 /test119.git master
        git status(查看)
        git add ./
        git commit -m "我添加了一行"
        git push 地址 master
        git  status
       git add ./
       git commit -m "----"
       git push 地址 master
       git pull 地址 master
       问题 冲突  手动修改
       
       19、git add ./
       git commit -m "合并冲突后胡修改"
       git push 地址 master
       
       
       git log ---看当前日志         （ctrl+c 停止）
       
       在push和2pull操作是
       先push再pull
       20、push和pull的简写方式
       git push 地址master
       git add ./
       git commit -m "----"
       git remote add origin 地址  //相当于声明拉一个变量
       git push origin -u master
       git add ./
       git commit -m "测试"
       git push origin -u master
       git add ./
       git commit -m "又提交拉一次"
        当我们再push时，加上-u参数，那么在下一次push时我们需要写上"git push”就能上传我们的代码，（加上-u之后，git会把当前分支与远程的指定的分支进行关联））
        
  
  
  
  
  
  
