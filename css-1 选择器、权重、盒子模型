一、Css初级篇-css基础选择器选择器权重
 （作为一名工程师，打交道跟什么打交道最多？
答：浏览器。
现在的主流浏览器【在市场有一定的市场份额、必须有独立研发的内核】及其内核？
Shell:外壳（操作类的展示部分）
内核：决定浏览器运转的快与不快，识别代码的路径问题，很多优化的问题等

浏览器                    内核
IE：                   trident
Google chrome谷歌：    webkit/blink [webkit谷歌和苹果的工程师研究出的内核]
firefox火狐：            gecko[給扣]
 Safari(涩火离)           webkit
Opera欧鹏）            presto[po lie si tou]

注释：（被注释掉的部分浏览器不能识别，相当于自己的作的备忘录）
<!--    -->
快捷键：Ctrl+?
1、这是关于什么
2、用注释调试改错（分段排解调试）
（编程主要在调试上，三分编程，七分调试）
Html       csss （cascading style sheet 层叠样式表）     javascript
结构       样式（装修）                              行为
1、引入css
   （1）行间样式：
<div style=” width:100px;
          Height;100px;
      Background0-color:red;
“></div
（2）页面级css
             在<head>
<style type=”text/css”> 告诉浏览器这里写的是css代码
Div{
Width:100px;
Height:100px;
Background-color:red;
}
</style>
</head>
（2）外部css文件
  Lession3.css
 Div{
 Width:100px;
Height:100px;
Border-radius;50%;
Background-color:black;
}
1.Html
  <head>
<link rel=”stylesheet” type=text/css” href=”lession3.css”>
</head>
谁传输给谁就是服务器
把html、css放到服务器上，服务器要有一个地址，方便客户端索取数据
www.baidu.comm是域名
192.168.000.001
异步的：两件事同时执行
同步的：两件事分开执行

1、选择器：
（1）id
<div id=”only”>123</siv>
1.Css
  #only{
 Background-color:red
}
一个元素只能有一个id值
（2）Class
<div class=”demo demo1”>123</div>
<div class=”demo”>456</div>
.demo{
Badkgroud-color:red;
}
Demo1{
Color:#f40;
}
（3）标签选择器
   Div{
  Background-color:green;
}
（4）通配符
<span>123</span>
<div>258</div>
<strong>456</strong>
2.Css
 *{
  Background-color:green;
}


<div id=”only” class=”demo”>
#only{
 Background-color:red;
}
.demo{
   Background-color:green;
}
优先级：
 !important>行间样式>id>class|属性>标签选择器>通配符
Css权重：
!important       infinity(正无穷)  
行间样式        1000
Id               100
Class|属性|伪类   10
标签|伪元素      1
通配符           0
（1000 ：256进制）
二、Css复杂选择器，权重计算问题，css基础属性
（1）父子选择器/派生选择器
Div span{
Background-color:red;
}
（2）直接子元素选择器(跟第一个子元素有效）
  <div>
  <em>1</em>
<strong>2</strong>
</div>
Css:
Div>em{
Background-color:red;
}
1、并列选择器
2、分组选择器(公用）
Em,strong,span{
Background-color:red;
}
3、只要写在同一个横行的选择器，把权重值相加

Css代码块：属性名：属性值
Div{
Font-size:12px;  //默认16像素
Font-weight:bold  //加租 
Font-style:italic;
Font-family:arial:   //字
 
三、Css企开发经验、习惯、盒子模型。层模型

编程思路方法：
1、先写html,再写css
2、先写css,再写html(先定义功能，后选功能【逆向编程】）

自定义标签(自定义功能[初始化标签】）：
Em{                      a{                         ul{
  Font-style:normal;           text-decoration:none;            list-style:none;
  Color：#c00;                coclor:#424242;                padding:0;
}                             }                            margin:0;  }
通配符标签可以初始化所有标签
*{
Padding:0;
Margin:0;
Text-decoration:noen;
List-style:none;
}
 
盒子的三大部分
1、盒子壁 border   //border-width:100px 100px 100px 100px
2、内边距padding(padding:100px 50px 60px 200px)上 右 下 左
  Padding-top:100
3、盒子内容width+height	
盒子模型：
Margin(外边距）+border+padding+（content=width+height）

Realwidth:160px
Realheight:160px



可是宽高：width:302 height:102


定位：
Div{
Position:absolute;  //绝对定位，可以被定位的元素
left:100px;
Top:100px;
Width:100px;
Height:`100px;
Background:red;
}
在很多默认的浏览器中padding的值是8像素
Opacity:0.5;   //透明度0.5

1.绝对定位absolute  脱离原来的位置进行定位（最近的有定位的父级进行定位，如果没有的，那么相对于文档定位）
2.Relative定位  保留原来的位置进行定位
3.Fixed定位
  Z-index:覆盖元素
 
